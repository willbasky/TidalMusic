import Prelude hiding ((<>))

-- Create a pattern grouping
d1 $ s "[bd sd] hh"
d1 $ fastcat [s "bd sd", s "hh"]

-- Shorthand for pattern grouping
d1 $ s "bd sd . hh hh hh"
d1 $ s "[bd sd] [hh hh hh]"

-- Play multiple patterns at the same time
d1 $ s "[bd sd, hh hh hh]"
d1 $ stack [s "bd sd", s "hh hh hh"]

-- Repeat a pattern
d1 $ s "bd*2 sd"
d1 $ s "[bd bd] sd"

-- Slow down a pattern
d1 $ s "bd/2"
d1 $ s (slow 2 $ "bd")

-- Alternate between patterns
d1 $ s "bd <sd hh cp>"
d1 $ slow 3 $ s "bd sd bd hh bd cp"

-- Replicate a pattern
d1 $ s "bd!3 sd"
d1 $ s "bd bd bd sd"

-- Elongate a pattern. Better understand with suparpiano.
d1 $ s "bd _ _ ~ sd _" 	-- Results in pattern (0>1/2)|s: "bd" (4/6>1)|s: "sd"

-- Elongate a pattern
d1 $ s "bd@3 sd"
d1 $ s "bd _ _ sd"

-- Randomly remove events from pattern
d1 $ s "bd? sd"
d1 $ fastcat [degradeBy 0.5 $ s "bd", s "sd"]

-- Selecting samples
d1 $ s "bd:3"
d1 $ s "bd" # n 3

-- Euclidean sequences
d1 $ s "bd(3,8)"
d1 $ euclid 3 8 $ s "bd"

---------------------------------------

d1 $ s "sd:3 . ~ bd:4 _"

d1 $ slow 3 $ someCycles (linger "0.25 0.125 0.5") $ chop 16 $ sound "breaks125"

d1 $ linger 0.25 $ n "0 2 [3 4] 2" # sound "arpy"

d1 $ every 4 (linger 0.25) $ n "0 2 [3 4] 2" # sound "arpy"

d1 $ every 3 (someCycles $ linger 0.25) $ chop 8 $ sound "breaks125"

d1 $ every 3 (linger "<0.75 0.25 1>") $ sound "bd sn:2 [mt rs] hc"

d1 $ s "cp@3 bd@2 odx@5"

d1 $ s "superpiano:2@3 superpiano:8@5 superpiano:4@10"

d1 $ n "3 _ _ ~ 10 _ ~ ~ 5 _ _ _ _" # s "superpiano"

setcps (3/30)



d3 $ cat [
    first,
    second,
    third,
    forth
    ]
    # cps (3/30)

-- p "first" $ stack [
first = stack [
  note "[a4@2 c5@4 d5@2 e5@3 f5 e5@2 d5@4 b4@2 g4@3 a4 b4@2 c5@4 a4@2 a4@3 gs4 a4@2 b4@4 gs4@2 e4@4 a4@2]"
    # s "superpiano",
  note "[~@4 e4@4 ~@2 e4@4 ~@2 d4@4 ~@2 d4@4 ~@2 c4@4 ~@2 c4@4 ~@2 b3@4 ~@2 b3@4]"
    # s "superpiano"
    # gain 0.85,
  note "[~@2 a3@6 a3@6 g3@6 g3@6 f3@6 f3@6 e3@6 e3@6]"
    # s "superpiano"
    # gain 0.85
  ]

-- p "second" $ stack [
second = stack [
  note "[c5@4 d5@2 e5@3 f5 e5@2 d5@4 b4@2 g4@3 a4 b4@2 c5@3 b4 a4@2 gs4@3 fs4 gs4@2 a4@6 a4@6]"
    # s "superpiano",
  note "[~@2 e4@4 ~@2 e4@4 ~@2 d4@4 ~@2 d4@4 ~@2 c4@4 ~@2 b3@4 ~@6 ~@6]"
    # s "superpiano"
    # gain 0.85,
  note "[a3@6 a3@6 g3@6 g3@6 f3@6 e3@6 a3@2 c4@2 e4@2 ~@6]"
    # s "superpiano"
    # gain 0.85,
  note "[~@42 a3@6, ~@42 c4@6, ~@42 e4@6]"
    # s "superpiano"
    # gain 0.85
  ]

-- p "third" $ stack [
third = stack [
  note "[g5@6 g5@3 f5 e5@2 d5@4 b4@2 g4@3 a4 b4@2 c5@4 a4@2 a4@3 gs4 a4@2 b4@4 gs4@2 e4@6]"
    # s "superpiano",
  note "[e3@6 e3@6 g3@6 g3@6 a3@6 a3@6 e3@6 e3@6]"
    # s "superpiano"
    # gain 0.85,
  note "[c3@6 c3@6 ~@6 ~@6 ~@6 ~@6 gs3@6 gs3@6]"
    # s "superpiano"
    # gain 0.85
  ]
  -- # cps (3/30)

-- p "forth" $ stack [
forth = stack [
  note "[g5@6 g5@3 f5 e5@2 d5@4 b4@2 g4@3 a4 b4@2 c5@3 b4 a4@2 gs4@3 fs4 gs4@2 a4@6 a4@6]"
    # s "superpiano",
  note "[e3@6 e3@6 ~@6 ~@6 ~@2 c4@4 ~@2 b3@4 a3@2 c4@2 e4@2 ~@6]"
    # s "superpiano"
    # gain 0.85,
  note "[c3@6 c3@6 g3@6 g3@6 f3@6 e3@6 ~@6 ~@6]"
    # s "superpiano"
    # gain 0.85,
  note "[~@42 a3@6, ~@42 c4@6, ~@42 e4@6]"
    # s "superpiano"
    # gain 0.85
  ]
  -- # cps (3/30)

setcps (1/3)

d1 $ n "[[a3@2 c4@2 e4@2] [c4@6, e4@6] [c4@6, e4@6]]" # s "superpiano"
